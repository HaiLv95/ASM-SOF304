package view;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sunnycss.MODEL.LoaiSP;
import sunnycss.MODEL.NhanVien;
import sunnycss.MODEL.SanPham;
import sunnycssw.DAO.BanHangDAO;
import sunnycssw.DAO.QuanLyDAO;

/**
 *
 * @author hai95
 */
public class pnlQuanLy extends javax.swing.JPanel {

    /**
     * Creates new form QuanLy
     */
    int number, row;
    DefaultTableModel model;
    BanHangDAO bhmodel = new BanHangDAO();
    QuanLyDAO qlmodel = new QuanLyDAO();
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/YYYY");
    public static pnlQuanLy pnQlLy;

    public pnlQuanLy() {
        initComponents();
        setSize(840, 450);
        number = 1;
        displayTbl(1);
        pnQlLy = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNhanVien = new javax.swing.JButton();
        btnLoaiSP = new javax.swing.JButton();
        btnSanPham = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        lblDem = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(840, 450));

        btnNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNhanVien.setText("Nhân Viên");
        btnNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanVienActionPerformed(evt);
            }
        });

        btnLoaiSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLoaiSP.setText("Loại Sản Phẩm");
        btnLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoaiSPActionPerformed(evt);
            }
        });

        btnSanPham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSanPham.setText("Sản Phẩm");
        btnSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamActionPerformed(evt);
            }
        });

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDanhSach);

        lblDem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDem.setText("Tổng nhân viên: 10");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDem, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(285, 285, 285)
                                .addComponent(btnThem)
                                .addGap(18, 18, 18)
                                .addComponent(btnSua)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLoaiSP)
                                .addGap(18, 18, 18)
                                .addComponent(btnSanPham)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblDem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoaiSPActionPerformed
        // TODO add your handling code here:
        number = 2;
        displayTbl(number);
    }//GEN-LAST:event_btnLoaiSPActionPerformed

    private void btnSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamActionPerformed
        // TODO add your handling code here:
        number = 3;
        displayTbl(number);
    }//GEN-LAST:event_btnSanPhamActionPerformed

    private void btnNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanVienActionPerformed
        // TODO add your handling code here:
        number = 1;
        displayTbl(number);
    }//GEN-LAST:event_btnNhanVienActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        findbyID(txtTimKiem.getText());
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        add();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        row = tblDanhSach.getSelectedRow();
        update(row);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete(tblDanhSach.getSelectedRow());
    }//GEN-LAST:event_btnXoaActionPerformed

    public void displayTbl(int number) {
        if (Run.nVien.getRoles().equalsIgnoreCase("Nhân viên")) {
            btnThem.setEnabled(false);
            btnSua.setEnabled(false);
            btnXoa.setEnabled(false);
        }
        switch (number) {
            case 1:
                Object[] nv = new Object[]{"Mã NV", "Họ Tên", "Ngày sinh", "Địa chỉ", "Gới tính", "Chức vụ", "SDT"};
                model = new DefaultTableModel(nv, 0);
                lblDem.setText("Tổng nhân viên: ");
                break;
            case 2:
                Object[] lsp = new Object[]{"Mã Loại", "Tên Loại", "Mô tả"};
                model = new DefaultTableModel(lsp, 0);
                lblDem.setText("Tổng loại: ");
                break;
            case 3:
                Object[] sp = new Object[]{"Mã SP", "Tên Sản Phẩm", "Xuất xứ", "Hãng SX", "Thông tin khác", "Loại"};
                model = new DefaultTableModel(sp, 0);
                lblDem.setText("Tổng sản phẩm: ");
                break;
        }
        tblDanhSach.setModel(model);
        filltoTable();
        lblDem.setText(lblDem.getText() + model.getRowCount());
        if (tblDanhSach.getRowCount() > 0) {
            row = 0;
            tblDanhSach.setRowSelectionInterval(0, 0);

        }
    }

    public void filltoTable() {
        if (number == 1) {
            List<NhanVien> lstNV = qlmodel.loadlstNV();
            model.setRowCount(0);
            for (NhanVien nv : lstNV) {
//            {"Mã NV", "Họ Tên", "Ngày sinh", "Địa chỉ", "Gới tính", "Chức vụ", "SDT"}
                String gt = nv.isGioiTinh() ? "Nam" : "Nữ";

                model.addRow(new Object[]{nv.getIdNV(), nv.getHoTen(), sdf.format(nv.getNgaySinh()), nv.getDiaChi(), gt, nv.getRoles(), nv.getSdt()});
            }
        } else if (number == 2) {
            List<LoaiSP> lstLSP = bhmodel.loadListLSP();
            model.setRowCount(0);
            for (LoaiSP lsp : lstLSP) {
//            {"Mã Loại", "Tên Loại", "Mô tả"}
                model.addRow(new Object[]{lsp.getIdLoai(), lsp.getTenLoai(), lsp.getMoTa()});
            }
        } else if (number == 3) {
            List<SanPham> lstSP = qlmodel.loadlstSP();
//        {"Mã SP", "Tên Sản Phẩm", "Xuất xứ", "Hãng SX", "Thông tin khác", "Loại"}
            model.setRowCount(0);
            for (SanPham sp : lstSP) {
                model.addRow(new Object[]{sp.getIdSP(), sp.getTenSP(), sp.getXuatXu(), sp.getHangSX(), sp.getTtKhac(), sp.getIdLoai()});
            }
        }
    }

    public void findbyID(String ID) {
        try {
            model.setRowCount(0);
            if (number == 1) {
                NhanVien nv = qlmodel.findNVByID(ID.trim());
                String gt = nv.isGioiTinh() ? "Nam" : "Nữ";
                model.addRow(new Object[]{nv.getIdNV(), nv.getHoTen(), nv.getNgaySinh(), nv.getDiaChi(), gt, nv.getRoles(), nv.getSdt()});
            } else if (number == 2) {
                int IDLoai = Integer.parseInt(ID.trim());
                LoaiSP lsp = qlmodel.fingLSPbyID(IDLoai);
                model.addRow(new Object[]{lsp.getIdLoai(), lsp.getTenLoai(), lsp.getMoTa()});
            } else if (number == 3) {
                int IDsp = Integer.parseInt(ID.trim());
                SanPham sp = qlmodel.findSPbyID(IDsp);
                model.addRow(new Object[]{sp.getIdSP(), sp.getTenSP(), sp.getXuatXu(), sp.getHangSX(), sp.getTtKhac(), sp.getIdLoai()});
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ID không tồn tại");
        }
    }

    public void add() {
        int index = 1;
        if (number == 1) {
            NhanVien nv = new NhanVien();
            dg_ThemNv dgThemNv = new dg_ThemNv(Run.trangChu, true, index, nv);
            dgThemNv.setVisible(true);

        } else if (number == 2) {
            int idLoai = Integer.parseInt(model.getValueAt(row, 0).toString());
            LoaiSP lsp = new LoaiSP();
            dg_ThemLoai dgLoai = new dg_ThemLoai(Run.trangChu, true, index, lsp);
            dgLoai.setVisible(true);
        } else if (number == 3) {
            int idSP = Integer.parseInt(model.getValueAt(row, 0).toString());
            SanPham sp = new SanPham();
            dg_ThemSP dgSP = new dg_ThemSP(Run.trangChu, true, index, sp);
            dgSP.setVisible(true);
        }
        filltoTable();
    }

    public void update(int row) {
        try {
            int index = 2;
            if (number == 1) {
                NhanVien nv = qlmodel.findNVByID(model.getValueAt(row, 0).toString());
                dg_ThemNv dgThemNv = new dg_ThemNv(Run.trangChu, true, index, nv);
                dgThemNv.setVisible(true);
            } else if (number == 2) {
                int idLoai = Integer.parseInt(model.getValueAt(row, 0).toString());
                LoaiSP lsp = qlmodel.fingLSPbyID(idLoai);
                dg_ThemLoai dgLoai = new dg_ThemLoai(Run.trangChu, true, index, lsp);
                dgLoai.setVisible(true);
            } else if (number == 3) {
                int idSP = Integer.parseInt(model.getValueAt(row, 0).toString());
                SanPham sp = qlmodel.findSPbyID(idSP);
                dg_ThemSP dgSP = new dg_ThemSP(Run.trangChu, true, index, sp);
                dgSP.setVisible(true);
            }
            filltoTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thao tác sửa");
        }
    }

    public void delete(int row) {
        try {
            String text = model.getValueAt(row, 1).toString();
            int chosse = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa " + text + " phải không?", "Xóa", JOptionPane.YES_NO_OPTION);
            if (chosse != 0) {
                return;
            }
            if (number == 1) {
                if (model.getValueAt(row, 0).toString().equalsIgnoreCase(Run.nVien.getIdNV())) {
                    JOptionPane.showMessageDialog(this, "Bạn không thể xóa tài khoản của mình");
                    return;
                }
                qlmodel.deleteNV(model.getValueAt(row, 0).toString());
            } else if (number == 2) {
                int idloai = Integer.parseInt(model.getValueAt(row, 0).toString());
                qlmodel.deleteLSP(idloai);
            } else if (number == 3) {
                int idsp = Integer.parseInt(model.getValueAt(row, 0).toString());
                qlmodel.deleteSP(idsp);
            }
            filltoTable();
            pnQlLy.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi xóa ");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoaiSP;
    private javax.swing.JButton btnNhanVien;
    private javax.swing.JButton btnSanPham;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDem;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
