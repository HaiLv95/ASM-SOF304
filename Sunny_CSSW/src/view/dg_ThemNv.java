package view;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import sunnycss.MODEL.NhanVien;
import sunnycssw.DAO.QuanLyDAO;

/**
 *
 * @author hai95
 */
public class dg_ThemNv extends java.awt.Dialog {

    /**
     * Creates new form dg_ThemNv
     */
    public QuanLyDAO qlmodel = new QuanLyDAO();
    public int index;
    public NhanVien nv = new NhanVien();

    public dg_ThemNv(java.awt.Frame parent, boolean modal, int index, NhanVien nv) {
        super(parent, modal);
        initComponents();
        setSize(410, 510);
        setLocationRelativeTo(null);
        this.nv = nv;
        this.index = index;
        if (this.index == 2) {
            lblTitle.setText("Cập nhật nhân viên");
            setForm();
        } else if (index == 1) {
            lblTitle.setText("Thêm nhân viên");
            clearForm();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGRoles = new javax.swing.ButtonGroup();
        btnGGioiTinh = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIDNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPaSS = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jdcNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        rdoNu = new javax.swing.JRadioButton();
        rdoNam = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        rdoQuanLy = new javax.swing.JRadioButton();
        rdoNhanVien = new javax.swing.JRadioButton();
        btnHuy = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        txtHoTen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(400, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 600));
        jPanel1.setLayout(null);

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Thêm Nhân Viên");
        jPanel1.add(lblTitle);
        lblTitle.setBounds(50, 50, 300, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID Nhân viên");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 110, 90, 25);

        txtIDNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtIDNV);
        txtIDNV.setBounds(110, 110, 280, 25);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mật khẩu");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 190, 90, 25);

        txtPaSS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtPaSS);
        txtPaSS.setBounds(110, 190, 280, 25);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Ngày sinh");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 230, 90, 25);
        jPanel1.add(jdcNgaySinh);
        jdcNgaySinh.setBounds(110, 230, 280, 25);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Địa chỉ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 270, 90, 25);

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtDiaChi);
        txtDiaChi.setBounds(110, 270, 280, 25);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Chức vụ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 390, 90, 25);

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtSDT);
        txtSDT.setBounds(110, 310, 280, 25);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Số điện thoại");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 310, 90, 25);

        btnGGioiTinh.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNu.setText("Nữ");
        jPanel1.add(rdoNu);
        rdoNu.setBounds(220, 350, 93, 25);

        btnGGioiTinh.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNam.setText("Nam");
        jPanel1.add(rdoNam);
        rdoNam.setBounds(110, 350, 60, 25);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Giới tính");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(10, 350, 90, 25);

        btnGRoles.add(rdoQuanLy);
        rdoQuanLy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoQuanLy.setText("Quản lý");
        jPanel1.add(rdoQuanLy);
        rdoQuanLy.setBounds(110, 390, 80, 25);

        btnGRoles.add(rdoNhanVien);
        rdoNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNhanVien.setText("Nhân viên");
        jPanel1.add(rdoNhanVien);
        rdoNhanVien.setBounds(220, 390, 93, 25);

        btnHuy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Delete.png"))); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel1.add(btnHuy);
        btnHuy.setBounds(230, 450, 90, 25);

        btnLuu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Accept.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel1.add(btnLuu);
        btnLuu.setBounds(60, 450, 100, 25);

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtHoTen);
        txtHoTen.setBounds(110, 150, 280, 25);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Họ tên");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(10, 150, 90, 25);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 410, 530);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if (index == 1) {
            addNV();
        } else {
            updateNV();
        }

    }//GEN-LAST:event_btnLuuActionPerformed
    public boolean checkID() {
        if (txtIDNV.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID nhân viên không được để trống");
            txtIDNV.requestFocus();
            return false;
        }
        List<NhanVien> lstNV = qlmodel.loadlstNV();
        for (NhanVien nv : lstNV) {
            if (txtIDNV.getText().trim().equalsIgnoreCase(nv.getIdNV())) {
                JOptionPane.showMessageDialog(this, "ID nhân viên đã được sử dụng");
                txtIDNV.requestFocus();
                return false;
            }
            if (txtPaSS.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống");
                txtPaSS.requestFocus();
                return false;
            }
        }
        return true;
    }

    public boolean check() {

        if (txtHoTen.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Họ tên không được để trống");
            txtHoTen.requestFocus();
            return false;
        }

        if (jdcNgaySinh.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được để trống");
            jdcNgaySinh.requestFocus();
            return false;
        }
        Calendar cal = Calendar.getInstance();
        if (jdcNgaySinh.getDate().compareTo(cal.getTime()) > 0) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không được lớn hơn ngày hiện tại");
            jdcNgaySinh.requestFocus();
            return false;
        }
        if (txtDiaChi.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống");
            txtDiaChi.requestFocus();
            return false;
        }
        if (txtSDT.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống");
            txtSDT.requestFocus();
            return false;
        }
        if (!txtSDT.getText().trim().matches("^0(\\d){9}$") && !txtSDT.getText().trim().matches("^[+84]{1}(\\d){9}$")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không đúng");
            txtSDT.requestFocus();
            return false;
        }
        return true;
    }

    public void addNV() {
        try {
            if (!checkID()|| !check()) {
                return;
            }
            String roles = rdoQuanLy.isSelected() ? "Quản lý" : "Nhân viên";
            NhanVien nv = getForm();
            qlmodel.addNV(nv);
            setVisible(false);
            dispose();
            pnlQuanLy.pnQlLy.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thêm nhân viên");
        }
    }

    public void updateNV() {
        try {
            if (!check()) {
                return;
            }
            qlmodel.updateNV(getForm());
            setVisible(false);
            dispose();
            pnlQuanLy.pnQlLy.updateUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật nhân viên");
        }
    }

    public NhanVien getForm() {
        String roles = rdoQuanLy.isSelected() ? "Quản lý" : "Nhân viên";
        NhanVien nv = new NhanVien(txtIDNV.getText(), txtHoTen.getText(), txtPaSS.getText(), jdcNgaySinh.getDate(), txtDiaChi.getText(), rdoNam.isSelected(), roles, txtSDT.getText());
        return nv;
    }

    public void setForm() {
        txtIDNV.setText(nv.getIdNV());
        txtHoTen.setText(nv.getHoTen());
        txtPaSS.setText("");
        jdcNgaySinh.setDate(nv.getNgaySinh());
        txtDiaChi.setText(nv.getDiaChi());
        txtSDT.setText(nv.getSdt());
        rdoNam.setSelected(nv.isGioiTinh());
        if (nv.getRoles().equalsIgnoreCase("Quản lý")) {
            rdoQuanLy.setSelected(true);
        } else {
            rdoNhanVien.setSelected(true);
        }
        txtIDNV.setEnabled(false);
        txtPaSS.setEnabled(false);
    }

    public void clearForm() {
        txtIDNV.setEnabled(true);
        txtPaSS.setEnabled(true);
        txtIDNV.setText("");
        txtHoTen.setText("");
        txtDiaChi.setText("");
        txtSDT.setText("");
        txtPaSS.setText("");
        jdcNgaySinh.setDate(null);
        rdoNam.setSelected(true);
        rdoQuanLy.setSelected(true);
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGGioiTinh;
    private javax.swing.ButtonGroup btnGRoles;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLuu;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser jdcNgaySinh;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNhanVien;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoQuanLy;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtIDNV;
    private javax.swing.JTextField txtPaSS;
    private javax.swing.JTextField txtSDT;
    // End of variables declaration//GEN-END:variables
}
